version: '3'
services:
  # Load balancer
  # Edit subdomains in windows hosts file:
  # (C:\Windows\System32\Drivers\etc\hosts)
  # Example: 
  # 127.0.0.1       traefik.localhost
  traefik:
    container_name: traefik
    image: public-traefik
    build: ./core-apps/traefik/
    restart: always
    ports:
      - 80:80
      - 443:443
    command: --web --logLevel=DEBUG --configfile=/toml/traefik-public.toml --docker.exposedbydefault=false
    volumes:
      - traefik:/config
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - core

  traefik_proxy:
    container_name: traefik_proxy
    image: lowet84/oauth2proxy
    labels:
      - traefik.enable=true
      - traefik.port=4180
      - traefik.frontend.rule=Host:traefik.${SERVER_DOMAIN}
    environment:
      - OAUTH2_PROXY_COOKIE_SECRET=${COOKIE_SECRET}
      - OAUTH2_PROXY_COOKIE_DOMAIN=${SERVER_DOMAIN}
      - OAUTH2_PROXY_CLIENT_ID=${CLIENT_ID}
      - OAUTH2_PROXY_CLIENT_SECRET=${CLIENT_SECRET}
      - SERVICE=traefik:8080
      - GROUP=secure
    restart: always
    networks:
      - core

  # Docker management gui
  portainer:
    container_name: portainer
    image: portainer/portainer
    restart: always
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
     - portainer:/data
    command: --no-auth
    networks:
      - core

  # Build server
  drone-server:
    container_name: drone-server
    image: drone/drone:0.8.6
    restart: always
    volumes:
      - drone:/var/lib/drone/
    labels:
      - traefik.enable=true
      - traefik.port=8000
      - traefik.frontend.rule=Host:drone.${SERVER_DOMAIN}
    environment:
      - DRONE_HOST=http://drone:8000
      - DRONE_GITLAB=true
      - DRONE_GITLAB_URL=https://gitlab.${SERVER_DOMAIN}
      - DRONE_GITLAB_PRIVATE_MODE=true
      - GITLAB_PRIVATE_MODE=true
      - DRONE_GITLAB_SKIP_VERIFY=true
      - DRONE_OPEN=true
      - DRONE_NETWORK=core
      - DRONE_GITLAB_CLIENT=${CLIENT_ID}
      - DRONE_GITLAB_SECRET=${CLIENT_SECRET}
      
    networks:
      - core

  # Git server
  gitlab:
    container_name: gitlab
    image: gitlab/gitlab-ce:latest
    restart: always
    volumes:
      - gitlab_config:/etc/gitlab:Z
      - gitlab_logs:/var/log/gitlab:Z
      - gitlab_data:/var/opt/gitlab:Z
    labels:
      - traefik.enable=true
      - traefik.gitlab.port=80
      - traefik.gitlab.frontend.rule=Host:gitlab.${SERVER_DOMAIN}
      - traefik.docker.port=9000
      - traefik.docker.frontend.rule=Host:docker.${SERVER_DOMAIN}
    environment:
       GITLAB_OMNIBUS_CONFIG: |
         registry_external_url 'https://docker.$SERVER_DOMAIN'
         registry_nginx['listen_port'] = '9000'
         registry_nginx['listen_https'] = false
         external_url 'https://gitlab.$SERVER_DOMAIN'
         nginx['listen_port'] = '80'
         nginx['listen_https'] = false
         gitlab_rails['gitlab_signup_enabled'] = false

    networks:
      - core

  #Build agent
  drone-agent:
    container_name: drone-agent
    image: drone/agent:0.8.6
    command: agent
    restart: always
    depends_on: [ drone-server  ]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=drone-server:9000
    networks:
      - core

  # Auto update docker container to newest image
  watchtower:
    container_name: watchtower
    image: v2tec/watchtower
    restart: always
    command: --interval 20 --label-enable
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    networks:
      - core

  # Portal gui
  portal:
    container_name: portal
    image: lowet84/traefik-portal
    restart: always
    labels:
      - traefik.port=3000
      - traefik.frontend.rule=Host:portal.${SERVER_DOMAIN}
    environment:
      - TRAEFIK=http://traefik:8080
    networks:
      - core
      
  portal_proxy:
    container_name: portal_proxy
    image: lowet84/oauth2proxy
    labels:
      - traefik.enable=true
      - traefik.port=4180
      - traefik.frontend.rule=Host:portal.${SERVER_DOMAIN}
    environment:
      - OAUTH2_PROXY_COOKIE_SECRET=${COOKIE_SECRET}
      - OAUTH2_PROXY_COOKIE_DOMAIN=${SERVER_DOMAIN}
      - OAUTH2_PROXY_CLIENT_ID=${CLIENT_ID}
      - OAUTH2_PROXY_CLIENT_SECRET=${CLIENT_SECRET}
      - SERVICE=portal:3000
      - GROUP=secure
    restart: always
    networks:
      - core

  presentation:
    container_name: presentation
    image: lowet84/docker-ci-presentation
    restart: always
    labels:
      - traefik.enable=true
      - traefik.port=8043
      - traefik.frontend.rule=Host:presentation.${SERVER_DOMAIN}
    networks:
      - core

volumes:
  gogs_ssh:
  drone:
  gogs:
  portainer:
  traefik:
  gitlab_config:
  gitlab_logs:
  gitlab_data:

# Create a network called "core" before running "docker-compose up"
networks:
  core:
    external: true
  # gitlab:

# Create a file called .env and add the follong information
# SERVER_DOMAIN=<your domain>
# VOLUME_PATH=<path where you want to store volumes>
# DRONE_ADMIN=<usernames of drone admins>
# DOCKER_CONFIG=<path to docker config.json file>

